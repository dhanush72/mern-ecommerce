[{"F:\\Github\\react-starter-kit\\src\\index.js":"1","F:\\Github\\react-starter-kit\\src\\App.js":"2","F:\\Github\\react-starter-kit\\src\\reportWebVitals.js":"3","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\index.js":"4","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\App.js":"5","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\reportWebVitals.js":"6","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\Login.js":"7","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\Register.js":"8","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Home.js":"9","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\firebase.js":"10","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"11","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\index.js":"12","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\userReducer.js":"13","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"14","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\auth.js":"15","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\History.js":"16","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"17","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"18","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\Navbar.js":"19","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\UserNav.js":"20","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\Password.js":"21","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\Wishlist.js":"22","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\History.js":"23","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\Password.js":"24","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\Wishlist.js":"25","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js":"26","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"27","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\AdminNav.js":"28","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"29","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\category.js":"30","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"31","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\CategoryForm.js":"32","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\CategorySearch.js":"33","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\subcategory\\SubCategoryCreate.js":"34","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\subcategory.js":"35","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\subcategory\\SubCategoryUpdate.js":"36","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js":"37","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\product.js":"38","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js":"39","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\FileUpload.js":"40","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\AdminProductCard.js":"41","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\Products.js":"42","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"43","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"44","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ProductCard.js":"45","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\Jumbotron.js":"46","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\LoadingCard.js":"47","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\home\\NewArrivals.js":"48","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\home\\BestSellers.js":"49","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Product.js":"50","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\SingleProduct.js":"51","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ProductListItems.js":"52","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\modal\\RatingModal.js":"53","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\rating.js":"54","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\RelatedProduct.js":"55","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\category\\CategoryList.js":"56","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\category\\CategoryHome.js":"57","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\subcategory\\SubCategoryList.js":"58","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\subcategory\\SubCategoryHome.js":"59","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\searchReducer.js":"60","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\SearchForm.js":"61","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Shop.js":"62","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\Star.js":"63","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\cartReducer.js":"64","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Cart.js":"65","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\CheckoutProductCard.js":"66","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\drawerReducer.js":"67","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\drawer\\SideDrawer.js":"68","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Checkout.js":"69","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\user.js":"70","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js":"71","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\coupon.js":"72","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\couponReducer.js":"73","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Payment.js":"74","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\StripeCheckout.js":"75","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\stripe.js":"76","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ShowPaymentInfo.js":"77","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\order\\Invoice.js":"78","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\admin.js":"79","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\order\\Orders.js":"80"},{"size":478,"mtime":1610692753861,"results":"81","hashOfConfig":"82"},{"size":116,"mtime":1610692779133,"results":"83","hashOfConfig":"82"},{"size":362,"mtime":1606279799489,"results":"84","hashOfConfig":"82"},{"size":1037,"mtime":1613558022286,"results":"85","hashOfConfig":"86"},{"size":5358,"mtime":1613558369105,"results":"87","hashOfConfig":"86"},{"size":375,"mtime":1611555704622,"results":"88","hashOfConfig":"86"},{"size":5175,"mtime":1612347164275,"results":"89","hashOfConfig":"86"},{"size":1750,"mtime":1611726722600,"results":"90","hashOfConfig":"86"},{"size":689,"mtime":1612418753491,"results":"91","hashOfConfig":"86"},{"size":532,"mtime":1611559139389,"results":"92","hashOfConfig":"86"},{"size":3229,"mtime":1611742328096,"results":"93","hashOfConfig":"86"},{"size":459,"mtime":1612869545099,"results":"94","hashOfConfig":"86"},{"size":234,"mtime":1611575402468,"results":"95","hashOfConfig":"86"},{"size":2120,"mtime":1611726448201,"results":"96","hashOfConfig":"86"},{"size":677,"mtime":1611748398308,"results":"97","hashOfConfig":"86"},{"size":417,"mtime":1611748043418,"results":"98","hashOfConfig":"86"},{"size":378,"mtime":1611749407405,"results":"99","hashOfConfig":"86"},{"size":682,"mtime":1611744637638,"results":"100","hashOfConfig":"86"},{"size":2667,"mtime":1612764532477,"results":"101","hashOfConfig":"86"},{"size":670,"mtime":1611746694020,"results":"102","hashOfConfig":"86"},{"size":2110,"mtime":1611747709781,"results":"103","hashOfConfig":"86"},{"size":381,"mtime":1611746875744,"results":"104","hashOfConfig":"86"},{"size":3320,"mtime":1613119106064,"results":"105","hashOfConfig":"86"},{"size":2110,"mtime":1611747709781,"results":"106","hashOfConfig":"86"},{"size":3170,"mtime":1613126779923,"results":"107","hashOfConfig":"86"},{"size":1342,"mtime":1613122409085,"results":"108","hashOfConfig":"86"},{"size":825,"mtime":1611904874606,"results":"109","hashOfConfig":"86"},{"size":1283,"mtime":1612176016995,"results":"110","hashOfConfig":"86"},{"size":3616,"mtime":1611831560122,"results":"111","hashOfConfig":"86"},{"size":1064,"mtime":1611913197584,"results":"112","hashOfConfig":"86"},{"size":1714,"mtime":1612162100275,"results":"113","hashOfConfig":"86"},{"size":660,"mtime":1611831525694,"results":"114","hashOfConfig":"86"},{"size":519,"mtime":1611826182051,"results":"115","hashOfConfig":"86"},{"size":4436,"mtime":1611915886506,"results":"116","hashOfConfig":"86"},{"size":1003,"mtime":1611828004895,"results":"117","hashOfConfig":"86"},{"size":2721,"mtime":1612327075383,"results":"118","hashOfConfig":"86"},{"size":3658,"mtime":1612267897239,"results":"119","hashOfConfig":"86"},{"size":1791,"mtime":1612430527784,"results":"120","hashOfConfig":"86"},{"size":5627,"mtime":1612267761974,"results":"121","hashOfConfig":"86"},{"size":3060,"mtime":1612327197487,"results":"122","hashOfConfig":"86"},{"size":1174,"mtime":1612172365673,"results":"123","hashOfConfig":"86"},{"size":2529,"mtime":1612267324924,"results":"124","hashOfConfig":"86"},{"size":4694,"mtime":1612327111943,"results":"125","hashOfConfig":"86"},{"size":6046,"mtime":1612174775503,"results":"126","hashOfConfig":"86"},{"size":2682,"mtime":1613108672373,"results":"127","hashOfConfig":"86"},{"size":285,"mtime":1612261101123,"results":"128","hashOfConfig":"86"},{"size":463,"mtime":1612266534700,"results":"129","hashOfConfig":"86"},{"size":1794,"mtime":1612327032114,"results":"130","hashOfConfig":"86"},{"size":1752,"mtime":1612327014660,"results":"131","hashOfConfig":"86"},{"size":1914,"mtime":1612414163702,"results":"132","hashOfConfig":"86"},{"size":4428,"mtime":1613123979312,"results":"133","hashOfConfig":"86"},{"size":1759,"mtime":1612413986298,"results":"134","hashOfConfig":"86"},{"size":1318,"mtime":1612346848230,"results":"135","hashOfConfig":"86"},{"size":847,"mtime":1612352664627,"results":"136","hashOfConfig":"86"},{"size":650,"mtime":1612414234966,"results":"137","hashOfConfig":"86"},{"size":1384,"mtime":1612418705842,"results":"138","hashOfConfig":"86"},{"size":2048,"mtime":1612420091804,"results":"139","hashOfConfig":"86"},{"size":1418,"mtime":1612419919511,"results":"140","hashOfConfig":"86"},{"size":2082,"mtime":1612420265842,"results":"141","hashOfConfig":"86"},{"size":246,"mtime":1612422056278,"results":"142","hashOfConfig":"86"},{"size":1155,"mtime":1612428870722,"results":"143","hashOfConfig":"86"},{"size":10498,"mtime":1613106697431,"results":"144","hashOfConfig":"86"},{"size":452,"mtime":1612440050413,"results":"145","hashOfConfig":"86"},{"size":450,"mtime":1612763692452,"results":"146","hashOfConfig":"86"},{"size":3228,"mtime":1612852490155,"results":"147","hashOfConfig":"86"},{"size":4148,"mtime":1612775706580,"results":"148","hashOfConfig":"86"},{"size":214,"mtime":1612776454831,"results":"149","hashOfConfig":"86"},{"size":2009,"mtime":1612778240384,"results":"150","hashOfConfig":"86"},{"size":5145,"mtime":1612869779429,"results":"151","hashOfConfig":"86"},{"size":2143,"mtime":1613123533556,"results":"152","hashOfConfig":"86"},{"size":5276,"mtime":1612865084620,"results":"153","hashOfConfig":"86"},{"size":552,"mtime":1612860620026,"results":"154","hashOfConfig":"86"},{"size":217,"mtime":1612869523470,"results":"155","hashOfConfig":"86"},{"size":618,"mtime":1613034687359,"results":"156","hashOfConfig":"86"},{"size":4614,"mtime":1613107001032,"results":"157","hashOfConfig":"86"},{"size":275,"mtime":1613033230373,"results":"158","hashOfConfig":"86"},{"size":1754,"mtime":1613122254443,"results":"159","hashOfConfig":"86"},{"size":2822,"mtime":1613118608897,"results":"160","hashOfConfig":"86"},{"size":467,"mtime":1613120450361,"results":"161","hashOfConfig":"86"},{"size":2789,"mtime":1613122663848,"results":"162","hashOfConfig":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v07qdk",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c7bgtj",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"175"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"175"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"175"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"175"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"175"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"175"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"175"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"175"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"175"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"175"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"175"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"175"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"175"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"175"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"175"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"175"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"175"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"175"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"175"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"175"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"F:\\Github\\react-starter-kit\\src\\index.js",[],"F:\\Github\\react-starter-kit\\src\\App.js",[],"F:\\Github\\react-starter-kit\\src\\reportWebVitals.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\index.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\App.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\reportWebVitals.js",[],["345","346"],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\Login.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\Register.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Home.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\firebase.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\index.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\userReducer.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\auth.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\History.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\Navbar.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\UserNav.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\Password.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\User\\Wishlist.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\History.js",["347"],"import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport { CloseCircleOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\r\nimport { Tag } from \"antd\";\r\nimport ShowPaymentInfo from \"../../components/card/ShowPaymentInfo\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport Invoice from \"../../components/order/Invoice\";\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = (e) => {\r\n    getUserOrders(user.token)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setOrders(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const showOrderTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">\r\n            <b>Title</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Price</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Brand</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Color</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Count</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Status</b>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <b>Shipping</b>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {order.products.map((p, index) => (\r\n          <tr key={index}>\r\n            <td> {p.product.title} </td>\r\n            <td> {p.product.price} </td>\r\n            <td> {p.product.brand} </td>\r\n            <td> {p.product.color} </td>\r\n            <td> {p.count} </td>\r\n            <td>\r\n              <Tag color=\"processing\">{order.orderStatus}</Tag>\r\n            </td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined className=\"text-success\" />\r\n              ) : (\r\n                <CloseCircleOutlined className=\"text-danger\" />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showPDFDownload = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      fileName=\"invoice.pdf\"\r\n      className=\"btn ant-btn-primary text-white\"\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <UserNav />\r\n          </div>\r\n          <div className=\"col  py-2\">\r\n            <h4>{orders.length ? \"Purchase Orders\" : \"No Purchase yet\"}</h4>\r\n            {orders.map((order, index) => (\r\n              <div key={index} className=\"card mb-3 p-3 \">\r\n                <ShowPaymentInfo order={order} />\r\n                <h6> Order Info</h6>\r\n                {showOrderTable(order)}\r\n                <div className=\"row\">\r\n                  <div className=\"col\">{showPDFDownload(order)}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\Password.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\user\\Wishlist.js",["348","349"],"import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { getWishlist, removeWishlist } from \"../../functions/user\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Result, Button } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { EyeOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport Placeholder from \"../../assets/images/placeholder.png\";\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadWishlist();\r\n  }, []);\r\n\r\n  const loadWishlist = () => {\r\n    getWishlist(user.token).then((res) => {\r\n      setWishlist(res.data.wishlist);\r\n      console.log(\"wishlist =>\", res);\r\n    });\r\n  };\r\n\r\n  const handleRemoveWishlist = (productId) => {\r\n    removeWishlist(productId, user.token).then((res) => {\r\n      toast.success(\"wishlist removed\");\r\n      loadWishlist();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col-md-10 py-2\">\r\n          <h4>Wishlist</h4>\r\n          <div className=\"row\">\r\n            {wishlist.length ? (\r\n              wishlist.map((p) => (\r\n                <div className=\"col-md-3 \" key={p._id}>\r\n                  <Card\r\n                    style={{ width: 240 }}\r\n                    cover={\r\n                      <Link to={`/product/${p.slug}`}>\r\n                        <img\r\n                          className=\"wishlist-img\"\r\n                          alt={p.title}\r\n                          src={\r\n                            p.images && p.images.length\r\n                              ? p.images[0].url\r\n                              : Placeholder\r\n                          }\r\n                        />\r\n                      </Link>\r\n                    }\r\n                    actions={[\r\n                      <Link to={`/product/${p.slug}`}>\r\n                        <EyeOutlined className=\"text-primary\" /> <br /> View\r\n                      </Link>,\r\n                      <a onClick={() => handleRemoveWishlist(p._id)}>\r\n                        <DeleteOutlined className=\"text-danger\" /> <br />\r\n                        Remove\r\n                      </a>,\r\n                    ]}\r\n                  >\r\n                    <Meta title={p.title} />\r\n                  </Card>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"col-md-8\">\r\n                <Result\r\n                  status=\"404\"\r\n                  title=\"No wishlist found\"\r\n                  subTitle=\"Please, add products to wishlist\"\r\n                  extra={\r\n                    <Link to=\"/shop\">\r\n                      <Button type=\"primary\">Continue shopping</Button>\r\n                    </Link>\r\n                  }\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js",["350"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../components/nav/AdminNav\";\r\nimport { getOrders, updateOrders } from \"../../functions/admin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Orders from \"../../components/order/Orders\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadAllOrders();\r\n  }, []);\r\n\r\n  const loadAllOrders = () => {\r\n    getOrders(user.token).then((res) => {\r\n      setOrders(res.data);\r\n    });\r\n  };\r\n\r\n  const handleStatusChange = (orderId, orderStatus) => {\r\n    updateOrders(orderId, orderStatus, user.token)\r\n      .then((res) => {\r\n        toast.success(\"status updated\");\r\n        loadAllOrders();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n\r\n        <div className=\"col-md-8\">\r\n          <h4>Admin Dashboard</h4>\r\n          <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\nav\\AdminNav.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\category.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["351"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategory, updateCategory } from \"../../../functions/category\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n\r\n  // * get category\r\n  const loadCategory = () => {\r\n    getCategory(slug).then((c) => setName(c.data.name));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateCategory(match.params.slug, { name }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`${res.data.name} is updated`);\r\n        history.push(\"/admin/category\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 400) toast.error(error.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          {loading ? <h4>Loading...</h4> : <h4>Update Category</h4>}\r\n\r\n          <CategoryForm\r\n            name={name}\r\n            setName={setName}\r\n            handleSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\CategoryForm.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\CategorySearch.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\subcategory\\SubCategoryCreate.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\subcategory.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\subcategory\\SubCategoryUpdate.js",["352"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../../../functions/category\";\r\nimport {\r\n  getSubCategory,\r\n  updateSubCategory,\r\n} from \"../../../functions/subcategory.js\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\nconst SubCategoryUpdate = ({ history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [parent, setParent] = useState([]);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSubCategory();\r\n  }, []);\r\n\r\n  // * get all categories\r\n  const loadCategories = () => {\r\n    getCategories().then((category) => setCategories(category.data));\r\n  };\r\n\r\n  // * get all sub categories\r\n  const loadSubCategory = () => {\r\n    getSubCategory(match.params.slug).then((sub) => {\r\n      setName(sub.data.name);\r\n      setParent(sub.data.parent);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateSubCategory(match.params.slug, { name, parent }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`${res.data.name} is updated`);\r\n        history.push(\"/admin/subcategory\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 400) toast.error(error.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          {loading ? <h4>Loading...</h4> : <h4>Update sub category</h4>}\r\n\r\n          <div className=\"form-group\">\r\n            <select\r\n              name=\"category\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setParent(e.target.value)}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((c) => (\r\n                  <option key={c._id} value={c._id} selected={c._id === parent}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <CategoryForm\r\n            place={\"sub category\"}\r\n            name={name}\r\n            setName={setName}\r\n            handleSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubCategoryUpdate;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js",["353"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { createProduct } from \"../../../functions/product\";\r\nimport ProductCreateForm from \"../../../components/forms/ProductCreateForm\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst initState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  categories: [],\r\n  category: \"\",\r\n  subcategory: [],\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n  brands: [\"Apple\", \"Dell\", \"Microsoft\", \"Lenovo\", \"Asus\"],\r\n  color: \"\",\r\n  brand: \"\",\r\n};\r\n\r\nconst ProductCreate = ({ history }) => {\r\n  const [values, setValues] = useState(initState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [showSubCategory, setShowSubCategory] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const { title, description } = values;\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  // * get all categories\r\n  const loadCategories = () => {\r\n    getCategories().then((category) =>\r\n      setValues({ ...values, categories: category.data })\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title || !description) {\r\n      return toast.error(\"field cannot be empty\");\r\n    }\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        toast.success(`${res.data.title} is created`);\r\n        // setValues(initState);\r\n        history.push(\"/admin/products\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"create product:\", error.message);\r\n        // if (error.response.status === 400) toast.error(error.response.data);\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault();\r\n    setValues({ ...values, subcategory: [], category: e.target.value });\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        setSubOptions(res.data);\r\n        console.log(\"sub options\", res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"sub options\", error);\r\n      });\r\n    setShowSubCategory(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          {loading ? (\r\n            <LoadingOutlined className=\"text-danger h1\" />\r\n          ) : (\r\n            <h4>Create Product</h4>\r\n          )}\r\n          <hr />\r\n\r\n          <div className=\"form-group\">\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n\r\n          <ProductCreateForm\r\n            values={values}\r\n            setValues={setValues}\r\n            handleChange={handleChange}\r\n            handleSubmit={handleSubmit}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            showSubCategory={showSubCategory}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\product.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js",["354","355","356","357","358"],"import React from \"react\";\r\nimport { Input, Select, Row, Col } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = ({\r\n  values,\r\n  setValues,\r\n  handleChange,\r\n  handleSubmit,\r\n  subOptions,\r\n  showSubCategory,\r\n  handleCategoryChange,\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subcategory,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Row gutter={16}>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product title\"\r\n              value={title}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Description</label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product description\"\r\n              value={description}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Price</label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"price\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product price\"\r\n              value={price}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Quantity</label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product quantity\"\r\n              value={quantity}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Shipping</label>\r\n            <select\r\n              name=\"shipping\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"color\">Colors</label>\r\n            <select\r\n              name=\"color\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {colors.map((c, index) => (\r\n                <option key={index} value={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"brand\">Brands</label>\r\n            <select\r\n              name=\"brand\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {brands.map((b, index) => (\r\n                <option key={index} value={b}>\r\n                  {b}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category</label>\r\n            <select\r\n              name=\"category\"\r\n              className=\"form-control\"\r\n              onChange={handleCategoryChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((c) => (\r\n                  <option key={c._id} value={c._id}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          {showSubCategory && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Sub Categories</label>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Please select\"\r\n                value={subcategory}\r\n                onChange={(value) =>\r\n                  setValues({ ...values, subcategory: value })\r\n                }\r\n              >\r\n                {subOptions.length &&\r\n                  subOptions.map((s) => (\r\n                    <Option key={s._id} value={s._id}>\r\n                      {s.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </Col>\r\n\r\n        <div className=\"form-group\">\r\n          <button className=\"btn ant-btn-primary\" type=\"submit\">\r\n            Create\r\n          </button>\r\n        </div>\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\FileUpload.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\AdminProductCard.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\Products.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["359","360"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\n\r\nconst initState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  subcategory: [],\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n  brands: [\"Apple\", \"Dell\", \"Microsoft\", \"Lenovo\", \"Asus\"],\r\n  color: \"\",\r\n  brand: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ history, match }) => {\r\n  const [values, setValues] = useState(initState);\r\n  const [showSubCategory, setShowSubCategory] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        // * load single product\r\n        setValues({ ...values, ...res.data });\r\n        // * load single product sub category\r\n        getCategorySubs(res.data.category._id).then((res) => {\r\n          setSubOptions(res.data);\r\n        });\r\n        // * array of sub category id as default values\r\n        const arr = [];\r\n        res.data.subcategory.map((s) => arr.push(s._id));\r\n        setArrayOfSubs((pre) => arr);\r\n      })\r\n      .catch((error) => console.log(\"single product:\", error));\r\n  };\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((category) => setCategories(category.data));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    values.subcategory = arrayOfSubs;\r\n    values.category = selectedCategory ? selectedCategory : values.category;\r\n    updateProduct(slug, values, user.token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        toast.success(`${res.data.title} is updated`);\r\n        history.push(\"/admin/products\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"update product:\", error.message);\r\n        setLoading(false);\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault();\r\n    setValues({ ...values, subcategory: [] });\r\n\r\n    // ? restore selected\r\n    setSelectedCategory(e.target.value);\r\n\r\n    getCategorySubs(e.target.value)\r\n      .then((res) => {\r\n        setSubOptions(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"sub options\", error);\r\n      });\r\n    setShowSubCategory(true);\r\n\r\n    // ? go back to original category\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct();\r\n    }\r\n    // ? clear category\r\n    setArrayOfSubs([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          {loading ? (\r\n            <LoadingOutlined className=\"text-danger h1\" />\r\n          ) : (\r\n            <h4>Update Product</h4>\r\n          )}\r\n          <hr />\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\"> Image</label>\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              loading={loading}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n\r\n          <ProductUpdateForm\r\n            values={values}\r\n            setValues={setValues}\r\n            handleChange={handleChange}\r\n            handleSubmit={handleSubmit}\r\n            handleCategoryChange={handleCategoryChange}\r\n            categories={categories}\r\n            subOptions={subOptions}\r\n            arrayOfSubs={arrayOfSubs}\r\n            setArrayOfSubs={setArrayOfSubs}\r\n            selectedCategory={selectedCategory}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["361","362"],"import React from \"react\";\r\nimport { Input, Select, Row, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n  values,\r\n  setValues,\r\n  handleChange,\r\n  handleSubmit,\r\n  handleCategoryChange,\r\n  categories,\r\n  subOptions,\r\n  arrayOfSubs,\r\n  setArrayOfSubs,\r\n  selectedCategory,\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subcategory,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Row gutter={16}>\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product title\"\r\n              value={title}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Description</label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product description\"\r\n              value={description}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Price</label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"price\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product price\"\r\n              value={price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Quantity</label>\r\n            <Input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              size=\"large\"\r\n              placeholder=\"Enter product quantity\"\r\n              value={quantity}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Shipping</label>\r\n            <select\r\n              name=\"shipping\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n              value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\r\n            >\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"color\">Colors</label>\r\n            <select\r\n              name=\"color\"\r\n              className=\"form-control\"\r\n              value={color}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {colors.map((c, index) => (\r\n                <option key={index} value={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"brand\">Brands</label>\r\n            <select\r\n              name=\"brand\"\r\n              className=\"form-control\"\r\n              value={brand}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">please select</option>\r\n              {brands.map((b, index) => (\r\n                <option key={index} value={b}>\r\n                  {b}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">Category</label>\r\n            <select\r\n              name=\"category\"\r\n              className=\"form-control\"\r\n              value={selectedCategory ? selectedCategory : category._id}\r\n              onChange={handleCategoryChange}\r\n            >\r\n              {categories.length > 0 &&\r\n                categories.map((c) => (\r\n                  <option key={c._id} value={c._id}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row mb-5\" xs={24} sm={12} md={8}>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Sub Category</label>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Please select\"\r\n                value={arrayOfSubs}\r\n                onChange={(value) => setArrayOfSubs(value)}\r\n              >\r\n                {subOptions.length &&\r\n                  subOptions.map((s) => (\r\n                    <Option key={s._id} value={s._id}>\r\n                      {s.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n        <div className=\"form-group mr-3\">\r\n          <button className=\"btn ant-btn-primary\" type=\"submit\">\r\n            Update\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <Link to=\"/admin/products\">\r\n            <button className=\"btn ant-btn-danger\" type=\"submit\">\r\n              Cancel\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ProductCard.js",["363"],"import React, { useState } from \"react\";\r\nimport { Card, Tooltip } from \"antd\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport Placeholder from \"../../assets/images/placeholder.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const { title, images, slug, price } = product;\r\n  const [toolTip, setToolTip] = useState(\"Click to add\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = [];\r\n\r\n    //? check for window object\r\n    if (typeof window !== undefined) {\r\n      // * get cart from local storage\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // * push new to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n\r\n      // * remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      // * save to local storage\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n      setToolTip(\"Added\");\r\n\r\n      // * add to redux\r\n      dispatch({ type: \"ADD_TO_CART\", payload: unique });\r\n\r\n      // * show cart items in side drawer\r\n      dispatch({ type: \"SET_VISIBLE\", payload: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          className=\"product-img p-3\"\r\n          alt={title}\r\n          src={images && images.length ? images[0].url : Placeholder}\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/product/${slug}`}>\r\n          <EyeOutlined className=\"text-info\" /> <br /> View\r\n        </Link>,\r\n        <Tooltip title={toolTip} color=\"green\">\r\n          <a onClick={handleAddToCart} disabled={product.quantity < 1}>\r\n            <ShoppingCartOutlined\r\n              className={product.quantity < 1 ? \"text-danger\" : \"text-success\"}\r\n            />{\" \"}\r\n            <br />\r\n            {product.quantity < 1 ? (\r\n              <p className=\"text-danger\">Out of stock</p>\r\n            ) : (\r\n              \" Add to cart\"\r\n            )}\r\n          </a>\r\n        </Tooltip>,\r\n      ]}\r\n    >\r\n      {product && product.ratings && product.ratings.length > 0 ? (\r\n        showAverage(product)\r\n      ) : (\r\n        <h6 className=\"text-danger mt-3\">No rating yet</h6>\r\n      )}\r\n      <Meta\r\n        title={title}\r\n        // description={`${description && description.substring(0, 35)}...`}\r\n      />\r\n      <div className=\"mt-2\">\r\n        <h6 className=\"price\">{`$${price}`}</h6>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\Jumbotron.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\LoadingCard.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\home\\NewArrivals.js",["364"],"import React, { useState, useEffect } from \"react\";\r\nimport { getProducts } from \"../../functions/product\";\r\nimport LoadingCard from \"../card/LoadingCard\";\r\nimport ProductCard from \"../card/ProductCard\";\r\nimport { Pagination } from \"antd\";\r\nimport { getProductsTotal } from \"../../functions/product\";\r\n\r\nconst NewArrivals = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n    getProductsTotal()\r\n      .then((res) => setProductsCount(res.data))\r\n      .catch((error) => console.log(error));\r\n  }, [page]);\r\n\r\n  const loadProducts = () => {\r\n    setLoading(true);\r\n    getProducts(\"createdAt\", \"desc\", page)\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"new arrivals:\", error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h4 className=\"text-black font-weight-bold display-6 mt-5 mb-4\">\r\n          New Arrivals\r\n        </h4>\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className=\"row\">\r\n            {products.map((product) => (\r\n              <div className=\"col-md-4\" key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"pt-5 text-center\">\r\n        <Pagination\r\n          current={page}\r\n          total={(productsCount / 3) * 10}\r\n          onChange={(value) => setPage(value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewArrivals;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\home\\BestSellers.js",["365"],"import React, { useState, useEffect } from \"react\";\r\nimport { getProducts, getProductsTotal } from \"../../functions/product\";\r\nimport LoadingCard from \"../card/LoadingCard\";\r\nimport ProductCard from \"../card/ProductCard\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst BestSellers = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n\r\n    getProductsTotal()\r\n      .then((res) => setProductsCount(res.data))\r\n      .catch((error) => console.log(error));\r\n  }, [page]);\r\n\r\n  const loadProducts = () => {\r\n    setLoading(true);\r\n    getProducts(\"sold\", \"desc\", page)\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"best sellers:\", error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h4 className=\"text-black font-weight-bold display-6 mt-5 mb-4\">\r\n          Best Sellers\r\n        </h4>\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className=\"row\">\r\n            {products.map((product) => (\r\n              <div className=\"col-md-4\" key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"pt-5 text-center pb-5\">\r\n        <Pagination\r\n          current={page}\r\n          total={(productsCount / 3) * 10}\r\n          onChange={(value) => setPage(value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BestSellers;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Product.js",["366","367","368"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getProduct,\r\n  getProductStar,\r\n  getProductRelated,\r\n} from \"../functions/product\";\r\nimport SingleProduct from \"../components/card/SingleProduct\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProductCard from \"../components/card/ProductCard\";\r\nimport RelatedProduct from \"../components/card/RelatedProduct\";\r\n\r\nconst Product = ({ match }) => {\r\n  const [product, setProduct] = useState([]);\r\n  const [related, setRelated] = useState([]);\r\n  const [star, setStar] = useState(0);\r\n  const { slug } = match.params;\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    if (product.ratings && user) {\r\n      const existingRatingObject = product.ratings.find(\r\n        (ele) => ele.postedBy.toString() === user._id.toString()\r\n      );\r\n      // * current user star\r\n      existingRatingObject && setStar(existingRatingObject.star);\r\n    }\r\n  });\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        setProduct(res.data);\r\n\r\n        // * related products\r\n        getProductRelated(res.data._id).then((res) => setRelated(res.data));\r\n      })\r\n      .catch((error) => console.log(\"product:\", error));\r\n  };\r\n\r\n  const onStarClick = (newRating, name) => {\r\n    setStar(newRating);\r\n    getProductStar(name, newRating, user.token)\r\n      .then((res) => {\r\n        loadProduct();\r\n      })\r\n      .catch((error) => console.log(\"rating:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid py-3\">\r\n      <div className=\"row\">\r\n        <SingleProduct\r\n          product={product}\r\n          onStarClick={onStarClick}\r\n          star={star}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <RelatedProduct related={related} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\SingleProduct.js",["369","370"],"import React, { useState } from \"react\";\r\nimport { Card, Tag, Tooltip } from \"antd\";\r\nimport { ShoppingCartOutlined, HeartOutlined } from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport Placeholder from \"../../assets/images/placeholder.png\";\r\nimport ProductListItems from \"./ProductListItems\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport RatingModal from \"../modal/RatingModal\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { addToWishlist } from \"../../functions/user\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst SingleProduct = ({ product, star, onStarClick }) => {\r\n  const { _id, title, description, images, category } = product;\r\n  const [toolTip, setToolTip] = useState(\"Click to add\");\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = [];\r\n\r\n    //? check for window object\r\n    if (typeof window !== undefined) {\r\n      // * get cart from local storage\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // * push new to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n\r\n      // * remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      // * save to local storage\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n      setToolTip(\"Added\");\r\n\r\n      // * add to redux\r\n      dispatch({ type: \"ADD_TO_CART\", payload: unique });\r\n\r\n      // * show cart items in side drawer\r\n      dispatch({ type: \"SET_VISIBLE\", payload: true });\r\n    }\r\n  };\r\n\r\n  const handleWishlist = (e) => {\r\n    e.preventDefault();\r\n    addToWishlist(product._id, user.token).then((res) => {\r\n      console.log(\"added to wishlist\", res.data);\r\n      toast.success(\"Added to wishlist\");\r\n      history.push(\"/user/wishlist\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-md-6 \">\r\n        {images && images.length ? (\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images &&\r\n              images.map((image) => (\r\n                <img src={image.url} key={image.public_id} alt={title} />\r\n              ))}\r\n          </Carousel>\r\n        ) : (\r\n          <Card\r\n            cover={\r\n              <img\r\n                className=\"product-img card-img\"\r\n                alt={title}\r\n                src={Placeholder}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <Card\r\n          actions={[\r\n            <Tooltip title={toolTip} color=\"green\">\r\n              <a onClick={handleAddToCart}>\r\n                <ShoppingCartOutlined className=\"text-success\" /> <br /> Add to\r\n                cart\r\n              </a>\r\n            </Tooltip>,\r\n            <a onClick={handleWishlist}>\r\n              <HeartOutlined className=\"text-secondary\" /> <br /> Add to\r\n              Wishlist\r\n            </a>,\r\n            <RatingModal>\r\n              <div className=\"text-center\">\r\n                <StarRatings\r\n                  name={_id}\r\n                  numberOfStars={5}\r\n                  rating={star}\r\n                  changeRating={onStarClick}\r\n                  isSelectable={true}\r\n                  starRatedColor=\"red\"\r\n                />\r\n              </div>\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          {category && (\r\n            <Link to={`/category/${category.slug}`}>\r\n              <Tag color=\"blue\" className=\"mb-2\">\r\n                {category.name}\r\n              </Tag>\r\n            </Link>\r\n          )}\r\n          <h3 className=\"title\">{title}</h3>\r\n          <Meta description={description} />\r\n\r\n          {product && product.ratings && product.ratings.length > 0 ? (\r\n            showAverage(product)\r\n          ) : (\r\n            <h6 className=\"text-danger mt-3\">No rating yet</h6>\r\n          )}\r\n\r\n          <hr />\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <ProductListItems product={product} />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ProductListItems.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\modal\\RatingModal.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\rating.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\RelatedProduct.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\category\\CategoryList.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\category\\CategoryHome.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\subcategory\\SubCategoryList.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\subcategory\\SubCategoryHome.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\searchReducer.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\SearchForm.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Shop.js",["371","372","373"],"import React, { useState, useEffect } from \"react\";\r\nimport { getProductsByCount, getProductsByFilter } from \"../functions/product\";\r\nimport { getCategories } from \"../functions/category\";\r\nimport { getSubCategories } from \"../functions/subcategory\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ProductCard from \"../components/card/ProductCard\";\r\nimport { Spin, Menu, Slider, Radio } from \"antd\";\r\nimport {\r\n  DollarOutlined,\r\n  DownSquareOutlined,\r\n  StarOutlined,\r\n  TagsOutlined,\r\n  FireOutlined,\r\n  BgColorsOutlined,\r\n  TransactionOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport Star from \"../components/forms/Star\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Shop = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryIds, setCategoryIds] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [brands, setBrands] = useState([\r\n    \"Apple\",\r\n    \"Dell\",\r\n    \"Microsoft\",\r\n    \"Lenovo\",\r\n    \"Asus\",\r\n  ]);\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [colors, setColors] = useState([\r\n    \"Black\",\r\n    \"Brown\",\r\n    \"Silver\",\r\n    \"White\",\r\n    \"Blue\",\r\n  ]);\r\n  const [color, setColor] = useState(\"\");\r\n  const [shippings] = useState([\"Yes\", \"No\"]);\r\n  const [shipping, setShipping] = useState(\"\");\r\n  const [setSub] = useState(\"\");\r\n  const [setStar] = useState(\"\");\r\n  const [price, setPrice] = useState([0, 0]);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  const { search } = useSelector((state) => ({ ...state }));\r\n  const { text } = search;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n\r\n    // * loading categories on page load\r\n    getCategories().then((res) => setCategories(res.data));\r\n\r\n    // * loading product by sub category\r\n    getSubCategories().then((res) => setSubCategories(res.data));\r\n  }, []);\r\n\r\n  // * loading product on page load\r\n  const loadAllProducts = () => {\r\n    setLoading(true);\r\n    getProductsByCount(12).then((res) => {\r\n      setProducts(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const delayed = setTimeout(() => {\r\n      fetchFilteredProducts({ query: text });\r\n      if (!text) {\r\n        loadAllProducts();\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(delayed);\r\n  }, [text]);\r\n\r\n  // * loading product by search\r\n  const fetchFilteredProducts = (arg) => {\r\n    getProductsByFilter(arg).then((res) => {\r\n      setProducts(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFilteredProducts({ price });\r\n  }, [ok]);\r\n\r\n  // * loading product by price\r\n  const handleSlider = (value) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setPrice(value);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    setTimeout(() => {\r\n      setOk(!ok);\r\n    }, 300);\r\n  };\r\n\r\n  // * loading product by category\r\n  const showCategories = () =>\r\n    categories.map((c) => (\r\n      <div key={c._id}>\r\n        <Checkbox\r\n          name=\"category\"\r\n          className=\"pb-2 pl-4 pr-4\"\r\n          value={c._id}\r\n          checked={categoryIds.includes(c._id)}\r\n          onChange={handleCheck}\r\n        >\r\n          {c.name}\r\n        </Checkbox>\r\n      </div>\r\n    ));\r\n\r\n  const handleCheck = (e) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    const inState = [...categoryIds];\r\n    const checked = e.target.value;\r\n    const foundInState = inState.indexOf(checked); // ? true or -1\r\n\r\n    // ? indexOf => if not found returns -1 else true\r\n    // ? if user not checked\r\n    if (foundInState === -1) {\r\n      inState.push(checked);\r\n    } else {\r\n      // ? if found get one item from index\r\n      inState.splice(foundInState, 1);\r\n    }\r\n    setCategoryIds(inState);\r\n    fetchFilteredProducts({ category: inState });\r\n  };\r\n\r\n  // * loading product by star\r\n  const showStars = () => (\r\n    <div className=\"pl-4 pr-4 pb-2\">\r\n      <Star number={5} starClick={handleStar} />\r\n      <Star number={4} starClick={handleStar} />\r\n      <Star number={3} starClick={handleStar} />\r\n      <Star number={2} starClick={handleStar} />\r\n      <Star number={1} starClick={handleStar} />\r\n    </div>\r\n  );\r\n\r\n  const handleStar = (num) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(num);\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    fetchFilteredProducts({ stars: num });\r\n  };\r\n\r\n  // * loading product by sub category\r\n  const showSubCategories = () =>\r\n    subCategories.map((s) => (\r\n      <div\r\n        className=\"p-1 m-1 badge badge-secondary\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => handleSubmit(s)}\r\n        key={s._id}\r\n      >\r\n        {s.name}\r\n      </div>\r\n    ));\r\n\r\n  const handleSubmit = (sub) => {\r\n    setSub(sub);\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    fetchFilteredProducts({ subcategory: sub });\r\n  };\r\n\r\n  // * loading product by brand\r\n  const showBrands = () =>\r\n    brands.map((b) => (\r\n      <Radio\r\n        key={b._id}\r\n        name={b}\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        value={b}\r\n        checked={b === brand}\r\n        onChange={handleBrand}\r\n      >\r\n        {b}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleBrand = (e) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setCategoryIds([]);\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    setBrand(e.target.value);\r\n    fetchFilteredProducts({ brand: e.target.value });\r\n  };\r\n\r\n  const showColors = () =>\r\n    colors.map((c) => (\r\n      <Radio\r\n        key={c._id}\r\n        name={c}\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        value={c}\r\n        checked={c === color}\r\n        onChange={handleColor}\r\n      >\r\n        {c}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleColor = (e) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setCategoryIds([]);\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setShipping(\"\");\r\n\r\n    setColor(e.target.value);\r\n    fetchFilteredProducts({ color: e.target.value });\r\n  };\r\n\r\n  const showShipping = (e) =>\r\n    shippings.map((s) => (\r\n      <div key={s._id}>\r\n        <Radio\r\n          name={s}\r\n          className=\"pb-2 pl-4 pr-4\"\r\n          value={s}\r\n          checked={s === shipping}\r\n          onChange={handleShipping}\r\n        >\r\n          {s}\r\n        </Radio>\r\n      </div>\r\n    ));\r\n\r\n  const handleShipping = (e) => {\r\n    dispatch({ type: \"SEARCH_QUERY\", payload: { text: \"\" } });\r\n    setCategoryIds([]);\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n\r\n    setShipping(e.target.value);\r\n    fetchFilteredProducts({ shipping: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 mt-2\">\r\n          <h4>Filter</h4>\r\n          <hr />\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\r\n          >\r\n            <SubMenu\r\n              key=\"1\"\r\n              title={\r\n                <span>\r\n                  <DollarOutlined />\r\n                  Price\r\n                </span>\r\n              }\r\n            >\r\n              <Slider\r\n                className=\"ml-4 mr-4\"\r\n                tipFormatter={(value) => `$ ${value}`}\r\n                range\r\n                max=\"4999\"\r\n                value={price}\r\n                onChange={handleSlider}\r\n              />\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"2\"\r\n              title={\r\n                <span>\r\n                  <DownSquareOutlined />\r\n                  Category\r\n                </span>\r\n              }\r\n            >\r\n              {showCategories()}\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"3\"\r\n              title={\r\n                <span>\r\n                  <StarOutlined />\r\n                  Rating\r\n                </span>\r\n              }\r\n            >\r\n              {showStars()}\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"4\"\r\n              title={\r\n                <span>\r\n                  <TagsOutlined />\r\n                  Sub Category\r\n                </span>\r\n              }\r\n            >\r\n              <div className=\"pl-4 pr-4\">{showSubCategories()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"5\"\r\n              title={\r\n                <span>\r\n                  <FireOutlined />\r\n                  Brand\r\n                </span>\r\n              }\r\n            >\r\n              {showBrands()}\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"6\"\r\n              title={\r\n                <span>\r\n                  <BgColorsOutlined />\r\n                  Color\r\n                </span>\r\n              }\r\n            >\r\n              {showColors()}\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key=\"7\"\r\n              title={\r\n                <span>\r\n                  <TransactionOutlined />\r\n                  Shipping\r\n                </span>\r\n              }\r\n            >\r\n              {showShipping()}\r\n            </SubMenu>\r\n          </Menu>\r\n        </div>\r\n        <div className=\"col-md-9 mt-2\">\r\n          <h4 className=\"text-black\">Products</h4>\r\n          <hr />\r\n\r\n          {products.length < 1 && <p>No products found</p>}\r\n\r\n          <div className=\"row\">\r\n            {loading ? (\r\n              <div className=\"mt-3 col-md-12 text-center\">\r\n                <Spin tip=\"Loading....\" size=\"large\"></Spin>\r\n              </div>\r\n            ) : (\r\n              products.map((product) => (\r\n                <div className=\"col-md-4 mb-3\" key={product._id}>\r\n                  <ProductCard key={product._id} product={product} />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\forms\\Star.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\cartReducer.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Cart.js",["374"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Result, Button } from \"antd\";\r\nimport CheckoutProductCard from \"../components/card/CheckoutProductCard\";\r\nimport { userCart } from \"../functions/user\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const getTotal = () => {\r\n    return cart.reduce((current, next) => {\r\n      return current + next.count * next.price;\r\n    }, 0);\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        console.log(\"checkout resp\", res);\r\n        if (res.data.ok) {\r\n          history.push(\"/checkout\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"checkout error =>\", error.message));\r\n  };\r\n\r\n  const showCartItems = () => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Image</th>\r\n          <th>Title</th>\r\n          <th>Price</th>\r\n          <th>Brand</th>\r\n          <th>Color</th>\r\n          <th>Count</th>\r\n          <th>Shipping</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n      </thead>\r\n      {cart.map((product) => (\r\n        <CheckoutProductCard key={product._id} product={product} />\r\n      ))}\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid my-2\">\r\n      <div className=\"px-1\">\r\n        <h4>Cart</h4>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          {!cart.length ? (\r\n            <Result\r\n              status=\"404\"\r\n              title=\"No products in cart\"\r\n              subTitle=\"please add products to item \"\r\n              extra={\r\n                <Link to=\"/shop\">\r\n                  <Button type=\"primary\">Continue shopping</Button>\r\n                </Link>\r\n              }\r\n            />\r\n          ) : (\r\n            showCartItems()\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <h4>Order Summary</h4>\r\n          <hr />\r\n          {cart.map((product, index) => (\r\n            <div key={index}>\r\n              <dl className=\"dlist-align\">\r\n                <dt>\r\n                  {product.title} x {product.quantity} :\r\n                </dt>\r\n                <dd className=\"text-right\">${product.price * product.count}</dd>\r\n              </dl>\r\n            </div>\r\n          ))}\r\n          <hr />\r\n          <dl className=\"dlist-align\">\r\n            <dt>Total :</dt>\r\n            <dd className=\"text-right font-weight-bold\">${getTotal()}</dd>\r\n          </dl>\r\n          {user ? (\r\n            <Button\r\n              onClick={handleCheckout}\r\n              type=\"primary\"\r\n              block\r\n              size=\"large\"\r\n              disabled={!cart.length}\r\n            >\r\n              Proceed to checkout\r\n            </Button>\r\n          ) : (\r\n            <Link to={{ pathname: \"/login\", state: { from: \"cart\" } }}>\r\n              <Button type=\"danger\" block size=\"large\">\r\n                Login to checkout\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\CheckoutProductCard.js",["375","376","377"],"import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport Placeholder from \"../../assets/images/placeholder.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst CheckoutProductCard = ({ product }) => {\r\n  const {\r\n    _id,\r\n    images,\r\n    title,\r\n    price,\r\n    brand,\r\n    color,\r\n    count,\r\n    quantity,\r\n    shipping,\r\n  } = product;\r\n\r\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleColor = (e) => {\r\n    let cart = [];\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      cart.map((newProduct, index) => {\r\n        if (_id === newProduct._id) {\r\n          cart[index].color = e.target.value;\r\n        }\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({ type: \"ADD_TO_CART\", payload: cart });\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (e) => {\r\n    let cart = [];\r\n    let count = e.target.value < 1 ? 1 : e.target.value;\r\n\r\n    if (count > quantity) {\r\n      return toast.error(`Max available quantitiy : ${quantity}`);\r\n    }\r\n\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      cart.map((newProduct, index) => {\r\n        if (_id === newProduct._id) {\r\n          cart[index].count = count;\r\n        }\r\n      });\r\n\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({ type: \"ADD_TO_CART\", payload: cart });\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    let cart = [];\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      cart.map((newProduct, index) => {\r\n        if (_id === newProduct._id) {\r\n          cart.splice(index, 1);\r\n        }\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({ type: \"ADD_TO_CART\", payload: cart });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <div className=\"img-sm border\">\r\n            {images.length ? (\r\n              <ModalImage small={images[0].url} large={images[0].url} />\r\n            ) : (\r\n              <ModalImage small={Placeholder} large={Placeholder} />\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td> {title} </td>\r\n        <td> {price} </td>\r\n        <td> {brand} </td>\r\n        <td>\r\n          {\r\n            <select\r\n              name=\"color\"\r\n              onChange={handleColor}\r\n              className=\"form-control\"\r\n            >\r\n              {product.color ? (\r\n                <option> {product.color} </option>\r\n              ) : (\r\n                <option> select color </option>\r\n              )}\r\n              {colors\r\n                .filter((c) => c !== color)\r\n                .map((c) => (\r\n                  <option key={c} value={c}>\r\n                    {c}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          }\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            value={count}\r\n            onChange={handleQuantity}\r\n          />\r\n        </td>\r\n        <td className=\"text-center\">\r\n          {shipping === \"Yes\" ? (\r\n            <CheckCircleOutlined\r\n              className=\"text-success\"\r\n              style={{ fontSize: \"20px\" }}\r\n            />\r\n          ) : (\r\n            <CloseCircleOutlined\r\n              className=\"text-danger\"\r\n              style={{ fontSize: \"20px\" }}\r\n            />\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <CloseOutlined\r\n            className=\"text-danger pointer\"\r\n            style={{ fontSize: \"20px\" }}\r\n            onClick={handleRemove}\r\n          />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default CheckoutProductCard;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\drawerReducer.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\drawer\\SideDrawer.js",["378"],"import React, { useState } from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Placeholder from \"../../assets/images/placeholder.png\";\r\n\r\nconst SideDrawer = () => {\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Drawer\r\n      title={`Cart - ${cart.length} Product`}\r\n      placement=\"right\"\r\n      onClose={() => {\r\n        dispatch({ type: \"SET_VISIBLE\", payload: false });\r\n      }}\r\n      visible={drawer}\r\n      width={320}\r\n    >\r\n      {cart.map((product) => (\r\n        <div className=\"row\" key={product._id}>\r\n          <div className=\"col\">\r\n            {product.images[0] ? (\r\n              <div className=\"cart-drawer\">\r\n                <img\r\n                  className=\"border img-sm mb-3\"\r\n                  src={product.images[0].url}\r\n                  alt={product.title}\r\n                />\r\n                <div className=\"cart-drawer-info\">\r\n                  <p className=\"mb-0\"> {product.title} </p>\r\n                  <strong>x {product.count}</strong>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"cart-drawer\">\r\n                <img\r\n                  className=\"border img-sm mb-3\"\r\n                  src={Placeholder}\r\n                  alt={product.title}\r\n                />\r\n                <div className=\"cart-drawer-info\">\r\n                  <p className=\"mb-0\"> {product.title} </p>\r\n                  <strong>x {product.count}</strong>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <Link to=\"/cart\">\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          onClick={() => dispatch({ type: \"SET_VISIBLE\", payload: false })}\r\n        >\r\n          Checkout\r\n        </Button>\r\n      </Link>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Checkout.js",["379"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport {\r\n  getUserCart,\r\n  emptyUserCart,\r\n  userAddress,\r\n  applyCoupon,\r\n} from \"../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\nconst Checkout = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coupon, setCoupon] = useState(\"\");\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [discountError, setDiscountError] = useState(\"\");\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getUserCart(user.token)\r\n      .then((res) => {\r\n        setProducts(res.data.products);\r\n        setTotal(res.data.cartTotal);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  }, [user.token]);\r\n\r\n  const handleSaveAddress = () => {\r\n    userAddress(address, user.token)\r\n      .then((res) => {\r\n        if (res.data.ok) {\r\n          setAddressSaved(true);\r\n          toast.success(\"Address has been saved\");\r\n          setAddress(\"\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleEmptyCart = () => {\r\n    //* empty local storage\r\n    if (typeof window !== undefined) {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n    //* empty redux\r\n    dispatch({ type: \"ADD_TO_CART\", payload: [] });\r\n    //* empty in backend\r\n    emptyUserCart(user.token).then((res) => {\r\n      setProducts([]);\r\n      setTotal(0);\r\n      setTotalAfterDiscount(0);\r\n      setCoupon(\"\");\r\n      toast.success(\"cart is empty, continue shopping\");\r\n      history.push(\"/shop\");\r\n    });\r\n  };\r\n\r\n  const showOrderSummary = () => (\r\n    <>\r\n      <p>\r\n        Products <strong>x {products.length}</strong>\r\n      </p>\r\n      <hr />\r\n      {products.map((p, index) => (\r\n        <div key={index}>\r\n          <p>\r\n            {p.product.title} ({p.color}) x {p.count} = $\r\n            {p.product.price * p.count}\r\n          </p>\r\n        </div>\r\n      ))}\r\n      <hr />\r\n      <p>\r\n        Cart Total: <strong>${total}</strong>\r\n      </p>\r\n\r\n      {totalAfterDiscount > 0 && (\r\n        <div className=\"bg-success text-center\">\r\n          <p className=\"text-white p-3\">\r\n            Discount Applied: <strong>${totalAfterDiscount}</strong>\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <Button\r\n            type=\"primary\"\r\n            disabled={!addressSaved || !products.length}\r\n            onClick={() => history.push(\"/payment\")}\r\n          >\r\n            Place Order\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Button\r\n            type=\"danger\"\r\n            disabled={!products.length}\r\n            onClick={handleEmptyCart}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const handleApplyDiscount = () => {\r\n    applyCoupon(coupon, user.token)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setTotalAfterDiscount(res.data);\r\n          dispatch({ type: \"COUPON_APPLIED\", payload: true });\r\n          //* push totalAfterDiscount to redux\r\n        }\r\n\r\n        if (res.data.error || !coupon) {\r\n          setDiscountError(res.data.error);\r\n          toast.error(res.data.error);\r\n          dispatch({ type: \"COUPON_APPLIED\", payload: false });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.error);\r\n      });\r\n  };\r\n\r\n  const showApplyCoupon = () => (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <label>Name</label>\r\n        <Input\r\n          type=\"text\"\r\n          size=\"large\"\r\n          placeholder={`Enter coupon name`}\r\n          value={coupon}\r\n          onChange={(e) => {\r\n            setCoupon(e.target.value);\r\n            setDiscountError(\"\");\r\n          }}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Button type=\"primary\" size=\"large\" onClick={handleApplyDiscount}>\r\n          Apply\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const showAddress = () => (\r\n    <>\r\n      <br />\r\n      <ReactQuill theme=\"snow\" value={address} onChange={setAddress} />\r\n      <Button className=\"mt-2\" type=\"primary\" onClick={handleSaveAddress}>\r\n        Save\r\n      </Button>\r\n      <hr />\r\n      <h4>Got Coupon?</h4>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">{showApplyCoupon()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row py-4\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Delivery Address</h4>\r\n          {showAddress()}\r\n        </div>\r\n        <div className=\"col-md-3 offset-md-3\">\r\n          <h4>Order Summary</h4>\r\n          <hr />\r\n          {showOrderSummary()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\user.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js",["380","381"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n// import DatePicker from \"react-datepicker\";\r\nimport {\r\n  createCoupon,\r\n  getCoupons,\r\n  removeCoupon,\r\n} from \"../../../functions/coupon\";\r\nimport { Input, Button, DatePicker, Spin, Result } from \"antd\";\r\nimport { DeleteOutlined, MehOutlined } from \"@ant-design/icons\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport moment from \"moment\";\r\n\r\nconst CreateCoupon = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"\");\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadCoupons();\r\n  }, []);\r\n\r\n  const loadCoupons = () => {\r\n    getCoupons().then((res) => setCoupons(res.data));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!name || !expiry || !discount) {\r\n      return toast.error(\"fields cannot be empty\");\r\n    }\r\n\r\n    createCoupon({ name, expiry, discount }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        setExpiry(\"\");\r\n        setDiscount(\"\");\r\n        loadCoupons();\r\n        toast.success(`${res.data.name} is created`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.error);\r\n        setLoading(false);\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    if (window.confirm(\"Delete\")) {\r\n      setLoading(true);\r\n      removeCoupon(id, user.token)\r\n        .then((res) => {\r\n          loadCoupons();\r\n          setLoading(false);\r\n          toast.success(`${res.data.name} is deleted`);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data.error);\r\n          setLoading(false);\r\n          toast.error(error.response.data.error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row \">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-8 py-3\">\r\n          <h4>Create Coupon</h4>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    size=\"large\"\r\n                    placeholder={`Enter coupon name`}\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    autoFocus\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Expiry</label> <br />\r\n                  <DatePicker\r\n                    value={expiry}\r\n                    onChange={(date) => setExpiry(date)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Discount</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    size=\"large\"\r\n                    placeholder={`Enter discount name`}\r\n                    value={discount}\r\n                    onChange={(e) => setDiscount(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <Button type=\"primary\" size=\"large\" onClick={handleSubmit}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n\r\n          <h4>All Coupons</h4>\r\n          <div className=\"row\">\r\n            {loading ? (\r\n              <div className=\"col text-center\">\r\n                <Spin tip=\"Loading...\"></Spin>\r\n              </div>\r\n            ) : (\r\n              <table className=\"table table-bordered\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Expiry</th>\r\n                    <th scope=\"col\">Discount</th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {coupons.map((coupon) => (\r\n                    <tr key={coupon._id}>\r\n                      <td> {coupon.name} </td>\r\n                      <td> {moment(coupon.expiry).format(\"YYYY-MM-DD\")} </td>\r\n                      <td> {coupon.discount}% </td>\r\n                      <td>\r\n                        <DeleteOutlined\r\n                          className=\"text-danger pointer\"\r\n                          onClick={() => handleRemove(coupon._id)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCoupon;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\coupon.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\redux\\reducers\\couponReducer.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\pages\\Payment.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\StripeCheckout.js",["382"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../assets/styles/stripe.css\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPayment } from \"../functions/stripe\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"antd\";\r\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport { createOrder, emptyUserCart } from \"../functions/user\";\r\n\r\nconst cartStyle = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: \"Arial, sans-serif\",\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#32325d\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nconst StripeCheckout = () => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [cartTotal, setCartTotal] = useState(\"\");\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(\"\");\r\n  const [payable, setPayable] = useState(\"\");\r\n\r\n  const { user, coupon } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    createPayment(coupon, user.token)\r\n      .then((res) => {\r\n        setClientSecret(res.data.clientSecret);\r\n        setCartTotal(res.data.cartTotal);\r\n        setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n        setPayable(res.data.payable);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: e.target.name.value,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setProcessing(false);\r\n      setError(`Payment failed ${payload.error.message}`);\r\n    } else {\r\n      //* result\r\n      createOrder(payload, user.token).then((res) => {\r\n        //* empty lcoal storage\r\n        if (res.data.ok) {\r\n          if (typeof window !== undefined) {\r\n            localStorage.removeItem(\"cart\");\r\n          }\r\n        }\r\n        //* empty redux\r\n        dispatch({ type: \"ADD_TO_CART\", payload: [] });\r\n        //* reset coupon\r\n        dispatch({ type: \"COUPON_APPLIED\", payload: false });\r\n      });\r\n      //* empty cart from db\r\n      emptyUserCart(user.token);\r\n      setProcessing(false);\r\n      setError(null);\r\n      setSucceeded(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e) => {\r\n    setDisabled(e.empty);\r\n    setError(e.error ? e.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!succeeded && (\r\n        <div>\r\n          {coupon && totalAfterDiscount !== undefined ? (\r\n            <p className=\"alert alert-success\">\r\n              Total after discount: ₹{totalAfterDiscount}\r\n            </p>\r\n          ) : (\r\n            <p className=\"alert alert-danger\">No coupon applied</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <Card\r\n        className=\"payment-card mb-4n\"\r\n        actions={[\r\n          <>\r\n            <DollarOutlined className=\"text-primary\" /> <br />\r\n            Total: ₹{cartTotal}\r\n          </>,\r\n          <>\r\n            <CheckOutlined className=\"text-success\" /> <br />\r\n            Pay: ₹{(payable / 100).toFixed(2)}\r\n          </>,\r\n        ]}\r\n      />\r\n      <form className=\"stripe-form\" id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id=\"card-element\"\r\n          options={cartStyle}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"stripe-button pointer\"\r\n          disabled={processing || disabled || succeeded}\r\n        >\r\n          <span id=\"button-text\">\r\n            {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\r\n          </span>\r\n        </button>\r\n        <hr />\r\n        <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n          Payment Successful. <Link to=\"/user/history\">View History</Link>\r\n        </p>\r\n        {error && (\r\n          <div id=\"card-error\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\stripe.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\card\\ShowPaymentInfo.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\order\\Invoice.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\functions\\admin.js",[],"F:\\Web Development\\MERN\\mern-ecommerce\\client\\src\\components\\order\\Orders.js",[],{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","replacedBy":"386"},{"ruleId":"387","severity":1,"message":"388","line":17,"column":6,"nodeType":"389","endLine":17,"endColumn":8,"suggestions":"390"},{"ruleId":"387","severity":1,"message":"391","line":18,"column":6,"nodeType":"389","endLine":18,"endColumn":8,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":65,"column":23,"nodeType":"395","endLine":65,"endColumn":70},{"ruleId":"387","severity":1,"message":"396","line":14,"column":6,"nodeType":"389","endLine":14,"endColumn":8,"suggestions":"397"},{"ruleId":"387","severity":1,"message":"398","line":16,"column":6,"nodeType":"389","endLine":16,"endColumn":8,"suggestions":"399"},{"ruleId":"387","severity":1,"message":"400","line":23,"column":6,"nodeType":"389","endLine":23,"endColumn":8,"suggestions":"401"},{"ruleId":"387","severity":1,"message":"402","line":39,"column":6,"nodeType":"389","endLine":39,"endColumn":8,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":20,"column":5,"nodeType":"406","messageId":"407","endLine":20,"endColumn":13},{"ruleId":"404","severity":1,"message":"408","line":22,"column":5,"nodeType":"406","messageId":"407","endLine":22,"endColumn":13},{"ruleId":"404","severity":1,"message":"409","line":24,"column":5,"nodeType":"406","messageId":"407","endLine":24,"endColumn":11},{"ruleId":"404","severity":1,"message":"410","line":27,"column":5,"nodeType":"406","messageId":"407","endLine":27,"endColumn":10},{"ruleId":"404","severity":1,"message":"411","line":28,"column":5,"nodeType":"406","messageId":"407","endLine":28,"endColumn":10},{"ruleId":"404","severity":1,"message":"412","line":28,"column":10,"nodeType":"406","messageId":"407","endLine":28,"endColumn":25},{"ruleId":"387","severity":1,"message":"413","line":40,"column":6,"nodeType":"389","endLine":40,"endColumn":8,"suggestions":"414"},{"ruleId":"404","severity":1,"message":"415","line":24,"column":5,"nodeType":"406","messageId":"407","endLine":24,"endColumn":16},{"ruleId":"404","severity":1,"message":"409","line":27,"column":5,"nodeType":"406","messageId":"407","endLine":27,"endColumn":11},{"ruleId":"393","severity":1,"message":"394","line":62,"column":11,"nodeType":"395","endLine":62,"endColumn":72},{"ruleId":"387","severity":1,"message":"416","line":19,"column":6,"nodeType":"389","endLine":19,"endColumn":12,"suggestions":"417"},{"ruleId":"387","severity":1,"message":"416","line":19,"column":6,"nodeType":"389","endLine":19,"endColumn":12,"suggestions":"418"},{"ruleId":"404","severity":1,"message":"419","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":19},{"ruleId":"387","severity":1,"message":"413","line":22,"column":6,"nodeType":"389","endLine":22,"endColumn":12,"suggestions":"420"},{"ruleId":"387","severity":1,"message":"421","line":24,"column":3,"nodeType":"406","endLine":24,"endColumn":12,"suggestions":"422"},{"ruleId":"393","severity":1,"message":"394","line":93,"column":15,"nodeType":"395","endLine":93,"endColumn":44},{"ruleId":"393","severity":1,"message":"394","line":98,"column":13,"nodeType":"395","endLine":98,"endColumn":41},{"ruleId":"404","severity":1,"message":"423","line":28,"column":18,"nodeType":"406","messageId":"407","endLine":28,"endColumn":27},{"ruleId":"404","severity":1,"message":"424","line":36,"column":18,"nodeType":"406","messageId":"407","endLine":36,"endColumn":27},{"ruleId":"387","severity":1,"message":"425","line":94,"column":6,"nodeType":"389","endLine":94,"endColumn":10,"suggestions":"426"},{"ruleId":"404","severity":1,"message":"427","line":10,"column":9,"nodeType":"406","messageId":"407","endLine":10,"endColumn":17},{"ruleId":"428","severity":1,"message":"429","line":35,"column":36,"nodeType":"430","messageId":"431","endLine":35,"endColumn":38},{"ruleId":"428","severity":1,"message":"429","line":57,"column":36,"nodeType":"430","messageId":"431","endLine":57,"endColumn":38},{"ruleId":"428","severity":1,"message":"429","line":74,"column":36,"nodeType":"430","messageId":"431","endLine":74,"endColumn":38},{"ruleId":"404","severity":1,"message":"432","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"433","line":19,"column":10,"nodeType":"406","messageId":"407","endLine":19,"endColumn":23},{"ruleId":"404","severity":1,"message":"434","line":10,"column":43,"nodeType":"406","messageId":"407","endLine":10,"endColumn":49},{"ruleId":"404","severity":1,"message":"435","line":11,"column":26,"nodeType":"406","messageId":"407","endLine":11,"endColumn":37},{"ruleId":"387","severity":1,"message":"436","line":54,"column":6,"nodeType":"389","endLine":54,"endColumn":8,"suggestions":"437"},"no-native-reassign",["438"],"no-negated-in-lhs",["439"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.","ArrayExpression",["440"],"React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["441"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadAllOrders'. Either include it or remove the dependency array.",["442"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["443"],"React Hook useEffect has a missing dependency: 'loadSubCategory'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["445"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'showSubCategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["446"],"'subcategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["447"],["448"],"'ProductCard' is defined but never used.",["449"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["450"],"'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["451"],"'dispatch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'discountError' is assigned a value but never used.","'Result' is defined but never used.","'MehOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["452"],"no-global-assign","no-unsafe-negation",{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"467","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},"Update the dependencies array to be: [loadUserOrders]",{"range":"478","text":"479"},"Update the dependencies array to be: [loadWishlist]",{"range":"480","text":"481"},"Update the dependencies array to be: [loadAllOrders]",{"range":"482","text":"483"},"Update the dependencies array to be: [loadCategory]",{"range":"484","text":"485"},"Update the dependencies array to be: [loadSubCategory]",{"range":"486","text":"487"},"Update the dependencies array to be: [loadCategories]",{"range":"488","text":"489"},"Update the dependencies array to be: [loadProduct]",{"range":"490","text":"491"},"Update the dependencies array to be: [loadProducts, page]",{"range":"492","text":"493"},{"range":"494","text":"493"},"Update the dependencies array to be: [loadProduct, slug]",{"range":"495","text":"496"},"Add dependencies array: [product.ratings, user]",{"range":"497","text":"498"},"Update the dependencies array to be: [ok, price]",{"range":"499","text":"500"},"Update the dependencies array to be: [coupon, user.token]",{"range":"501","text":"502"},[677,679],"[loadUserOrders]",[704,706],"[loadWishlist]",[501,503],"[loadAllOrders]",[626,628],"[loadCategory]",[803,805],"[loadSubCategory]",[1281,1283],"[loadCategories]",[1462,1464],"[loadProduct]",[699,705],"[loadProducts, page]",[658,664],[696,702],"[loadProduct, slug]",[1006,1006],", [product.ratings, user]",[2683,2687],"[ok, price]",[1791,1793],"[coupon, user.token]"]